@using JobTrackerApp.WebMVC.Models
@model AuthenticationViewModel

@{
    ViewBag.Title = "Home Page";
}

@*Email: test@test.com
    Password: Test123!*@

<main>
    <header>
        <ul class="header-menu">
            <li>
                <div id="header-login-wrapper">
                    <p id="header-login-button" class="active-button">Log In</p>
                </div>
            </li>
            <li id="header-register-button">Sign Up</li>
        </ul>
    </header>

    <div id="content-wrapper">
        <div id="login-section">
            @* Login Section *@
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Login.Email, new { @class = "user-info", @placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Login.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(m => m.Login.Password, new { @class = "user-info", @placeholder = "Password" })
                    @Html.ValidationMessageFor(m => m.Login.Password, "", new { @class = "text-danger" })
                    @Html.ActionLink("Forgot Password?", "ForgotPassword", "Account", routeValues: null, htmlAttributes: new { @id = "forgot-password" })
                </div>
                <button type="submit" value="Log In" id="signin-register-button">Log In</button>
            }
        </div>

        <div id="register-section" style="display: none">
            @* Register Section *@
            @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.TextBoxFor(m => m.Register.Email, new { @class = "user-info", @placeholder = "Email" })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(m => m.Register.Password, new { @class = "user-info", @placeholder = "Password" })
                </div>
                <div class="form-group">
                    @Html.PasswordFor(m => m.Register.ConfirmPassword, new { @class = "user-info", @placeholder = "Confirm Password" })
                    @Html.ActionLink("Forgot Password?", "ForgotPassword", "Account", routeValues: null, htmlAttributes: new { @id = "forgot-password" })
                </div>
                <button type="submit" value="Register" id="signin-register-button">Register</button>
            }
        </div>
    </div>
    @Html.Partial("_LoginPartial")
</main>

<script>
    window.addEventListener("load", function () {
        const loginSection = document.getElementById("login-section");
        const registerSection = document.getElementById("register-section");
        const loginButton = document.getElementById("header-login-button");
        const registerButton = document.getElementById("header-register-button");

        loginButton.classList.add("active-button");

        loginButton.addEventListener("click", () => {
            loginSection.style.display = "block";
            registerSection.style.display = "none";
            loginButton.classList.add("active-button");
            registerButton.classList.remove("active-button");
        });

        registerButton.addEventListener("click", () => {
            loginSection.style.display = "none";
            registerSection.style.display = "block";
            registerButton.classList.add("active-button");
            loginButton.classList.remove("active-button");
        });
    });
</script>